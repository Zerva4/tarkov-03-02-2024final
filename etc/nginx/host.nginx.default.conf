server {
    server_name domain.tld;
    return 301 https://domain.tld$request_uri;
}

server {
    listen 443 ssl http2;
    server_name domain.tld;

    root /path/to/public;

    ssl_certificate /usr/local/etc/letsencrypt/live/i-tools.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /usr/local/etc/letsencrypt/live/i-tools.ru/privkey.pem; # managed by Certbot

    ssl_protocols TLSv1.3 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    resolver 8.8.8.8;

    client_max_body_size 100M;

    location / {
        # try to serve file directly, fallback to app.php
        # try_files $uri /index.php$is_args$args;
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ [^/]\.php(/|$) {
        try_files $uri = 404;
        fastcgi_pass unix:/path/to/socket/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi_params;

       # When you are using symlinks to link the document root to the
       # current version of your application, you should pass the real
       # application path instead of the path to the symlink to PHP
       # FPM.
       # Otherwise, PHP's OPcache may not properly detect changes to
       # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
       # for more information).
       fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
       fastcgi_param DOCUMENT_ROOT $realpath_root;
       # Prevents URIs that include the front controller. This will 404:
       # http://domain.tld/app.php/some-path
       # Remove the internal directive to allow URIs like this
       internal;
   }

   location = /favicon.ico {
      log_not_found off;
      access_log off;
   }

   error_page 404 /index.php?$query_string;
   error_page 403 /index.php?$query_string;

   error_log /home/eft/var/log/nginx.error.log;
   access_log /home/eft/var/log/nginx.access.log;
}